@namespace MudBlazor
@typeparam T
@inherits MudComponentBase

@{
    if (ChipSet is not null)
    {
        UserAttributes.TryAdd("role", "checkbox");
        UserAttributes["aria-checked"] = IsSelectedState.Value.ToString().ToLowerInvariant();

    }
    else if (IsClickable && GetDisabled() is false)
    {
        UserAttributes.TryAdd("role", "button");
    }
}

<div tabindex="0" @attributes="UserAttributes" class="@Classname" style="@Style" @onclick="EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(OnClickAsync)">
    @{
        if (AvatarContent is not null)
        {
            @AvatarContent
        }
        else if (!string.IsNullOrEmpty(Icon) && !ShowCheckMark)
        {
            <MudIcon Disabled="@Disabled" Icon="@Icon" Class="mud-chip-icon" Size="MudBlazor.Size.Small" Color="@GetIconColor()" />
        }
        else if (ShowCheckMark)
        {
            <MudIcon Disabled="@Disabled" Icon="@GetCheckedIcon()" Class="mud-chip-icon" Size="MudBlazor.Size.Small" />
        }
    }
    <span class="mud-chip-content">
        @if (ChildContent is null)
        {
            @if(Text is null) {
                @($"{Value}")
            }
            else {
                @Text
            }
        }
        else
        {
            @ChildContent
        }
        @if (OnClose.HasDelegate || ChipSet?.AllClosable == true)
        {
            <MudIconButton Class="mud-chip-close-button" Icon="@GetCloseIcon()" OnClick="OnCloseAsync" Size="MudBlazor.Size.Small" />
        }
    </span>
</div>
